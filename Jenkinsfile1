pipeline {
    agent any
    tools {
        maven 'M3'  
        git 'git'    
    }
    stages {

        stage('Git Checkout') {
            steps {
                echo 'Git Checkout'
                git branch: 'main', credentialsId: 'github-ssh-credentials', url: 'git@github.com:Muktamk/FullStack-Blogging-App.git'
            }
        }

        

         stage('Compile') {
             steps {
                 echo 'Compiling the application using Maven'
                 sh 'mvn compile'
             }
         }

         stage('Unit Testing') {
             steps {
                 echo 'Running Unit Tests'
                 sh 'mvn test'
             }
         }

         stage('Build') {
             steps {
                 echo 'Building the application'
                 sh 'mvn package'
             }
         }

         //stage('Publish to Nexus') {
         //    steps {
         //        withMaven(globalMavenSettingsConfig: '8922a16d-d9b3-4292-9d4c-84e6993d104a', maven: 'M3') {
         //            echo 'Deploying to Nexus'
         //            sh 'mvn deploy'
         //        }
         //    }
         // }

         stage('Build & Tag Docker Image') {
             steps {
                 script {
                     // Ensure docker is configured correctly in Jenkins
                     withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                         echo 'Building Docker Image'
                         sh 'docker build -t mukta178/product-dev:latest .'
                     }
                 }
             }
         }

         stage('Scan Docker Image with Trivy') {
             steps {
                 echo 'Scanning Docker Image with Trivy'
                 sh 'trivy image --format table -o image-report.html mukta178/product-dev:latest'
             }
         }

         stage('Push Docker Image') {
             steps {
                 script {
                     // Ensure docker is configured correctly in Jenkins
                     withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                         echo 'Pushing Docker Image to registry'
                         sh 'docker push mukta178/product-dev:latest'
                     }
                 }
             }
         }

       stage('K8-Deployment') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'mega_project-cluster', contextName: '', credentialsId: 'k8-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://B154517178067F3EE04A5D80589BEFD1.gr7.us-east-2.eks.amazonaws.com') {
                    sh 'kubectl apply -f deployment-service.yml'
                sleep 20
                 }
            }
        }
       stage('Verify K8-Deployment') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: 'mega_project-cluster', contextName: '', credentialsId: 'k8-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://B154517178067F3EE04A5D80589BEFD1.gr7.us-east-2.eks.amazonaws.com') {
                sh 'kubectl get pods -n webapps'
                sh 'kubectl get svc -n webapps'
            }
        }
    }
      
    } // Closing the 'stages' block
} // Closing the 'pipeline' block
